<li>
  {% if item.displayName %}
    <strong>{{ item.displayName }}</strong>:
  {% else %}
    <strong>{{ key }}</strong>:
  {% endif %}

  {# Create a local copy of the item. #}
  {# This local copy could be overwritten if the item has a parent type #}
  {# The new item will hold the properties of the parent type #}
  {% set localItem = item %}

  <em>
    {%- if item.required -%}required {% endif -%}

    {%- set typeOptions = typeWithName(item.type) -%}
    {%- if typeOptions -%}
      {%- set localItem = propertiesOfType(typeOptions.type, typeOptions.rootType) -%}
    {%- endif -%}

    {% if localItem.type == 'object' %}
      {% set typeName = item.type %}
      {% include "./type.nunjucks" %}
    {% else %}
      (
      {%- if item.enum -%}
        one of {{ item.enum.join(', ') }}
      {%- endif -%}


      {{ localItem.type }}
      {%- if localItem.default %} - default: {{ localItem.default }}{%- endif -%}
      {%- if localItem.repeat %} - repeat: {{ localItem.repeat }}{%- endif -%}
      {%- if localItem.type == 'string' -%}
        {%- if localItem.minLength %} - minLength: {{ localItem.minLength }}{%- endif -%}
        {%- if localItem.maxLength %} - maxLength: {{ localItem.maxLength }}{%- endif -%}
      {%- else -%}
        {%- if localItem.minimum %} - minimum: {{ localItem.minimum }}{%- endif -%}
        {%- if localItem.maximum %} - maximum: {{ localItem.maximum }}{%- endif -%}
      {%- endif -%}
      {%- if localItem.pattern %} - pattern: {{ localItem.pattern }}{%- endif -%}
      )
    {% endif %}
  </em>

  {% markdown %}{{ item.description }}{% endmarkdown %}

  {% if item.schema %}
    <p><strong>Schema</strong>:</p>
    <pre><code>{{ item.schema | escape }}</code></pre>
  {% endif %}

  {% if item.example %}
    <p><strong>Example</strong>:</p>
    {% if item.type == 'string' %}
      <pre>{{ item.example| escape }}</pre>
    {% else %}
      <pre><code>{{ item.example | escape }}</code></pre>
    {% endif %}
  {% endif %}
</li>
